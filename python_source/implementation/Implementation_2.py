# <문제> 왕실의 나이트
# 행복 왕국의 왕실 정원은 체스판과 같은 8 X 8 좌표 평면입니다. 왕실 정원의 특정한 한 칸에 나이트가 서있습니다. 나이트는 매우 충성스러운 신하로서 매일 무술을 연마합니다.
# 나이트는 말을 타고 있기 때문에 이동을 할 때는 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없습니다.
# 나이트는 특정 위치에서 다음과 같은 2가지 경우로 이동할 수 있습니다.
# 1. 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기 (a,b,c,d,e,f,g,h)
# 2. 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기 (1,2,3,4,5,6,7,8)
# 이처럼 8 X 8 좌표 평면상에서 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의 수를 출력하는 프로그램을 작성하세요.
# 왕실의 정원에서 행 위치를 표현할 때는 1부터 8로 표현하며, 열 위치를 표현할 때는 a부터 h로 표현합니다.
# c2에 있을 때 이동할 수 있는 경우의 수는 6가지입니다.
# <입력> 첫째 줄에 8 X 8 좌표 평면상에서 현재 나이트가 위치한 곳의 좌표를 나타내는 두 문자로 구성된 문자열이 입력된다. 입력문자는 a1처럼 열과 행으로 이뤄진다.
# <출력> 첫째 줄에 나이트가 이동할 수 있는 경우의 수를 출력하시오.

# <내 풀이>
# 좌표 문제처럼 풀이
n = input().strip()
x_level = {'a':1, 'b':2, 'c':3, 'd':4, 'e':5, 'f':6, 'g':7, 'h':8}
x = int(x_level[n[0]])
y = int(n[1])
dx = [1,-1,1,-1,-2,-2,2,2]
dy = [-2,-2,2,2,-1,1,-1,1]
count = 0

for i in range(8):
    # 0 뿐만 아니라 끝값도 꼭 표기해줘야 해
    if 8 > x+dx[i] > 0 and 8 > y+dy[i] > 0:
        count += 1

print(count)

# <답안 예시>
input_data = input()
row = int(input_data[1])
# 문자로 들어온 값을 아스키 코드 형태의 값으로 바꾸고 그 값을 문자 a로 아스키 코드로 바꾼 값을 빼고 1을 더해 컬럼의 위치를 찾을 수 있다.
column = int(ord(input_data[0])) - int(ord('a')) + 1

# 나이트가 이동할 수 있는 8가지 방향 정의 (dx,dy 가 아니더라도 2차원 배열을 이용해서 방향 벡터를 정의할 수 있다.)
steps = [(-2,-1), (-1,-2), (1,-2), (2,-1), (2,1), (1,2), (-1,2), (-2,1)]

# 8가지 방향에 대하여 각 위치로 이동이 가능한지 확인
result = 0
for step in steps:
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]
    next_column = column + step[1]
    # 해당 위치로 이동이 가능하다면 카운트 증가
    if next_row >= 1 and next_row <= 8 and next_column >= 1 and next_column <= 8:
        result += 1

print(result)

# <추가> 좌표 풀이 사용시 (0,0) 쪽으로 벗어나는 값 뿐만 아니라 (8,8) 끝으로 벗어나는 값들도 확인해야 한다.