# 그리디 알고리즘은 매 상황 최적의 값을 골라야 할 때 사용
# 문제에서 그리디 알고리즘을 사용해야겠다. 라는 것을 추론할 수 있는 능력이 필요

# <문제> 거스름 돈
# 당신은 음식점의 계산을 도와주는 점원입니다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다.
# 손님에게 거슬러 주어야 할 돈이 N원일 때 거슬러 주어야 할 동전의 최소 개수를 구하세요. 단, 거슬러 줘야 할 돈 N은 항상 10의 배수입니다.

# <해결 아이디어> 차례대로 거슬러 줄 수 있을 만큼 거슬러 준다.
N=1260
count = 0

array = [500,100,50,10]

for coin in array:
    count += N // coin # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    N %= coin # 거슬러 주고 남은 돈

print(count)

# 화폐의 종류가 K라고 할 때, 소스코드의 시간 복잡도는 O(K)이다.
# 이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과는 무관하며, 동전의 총 종류에만 영향을 받는다.

# <추가> 만약 거스름 돈 단위가 500원, 400원, 50원, 10원 이였다면 그리디 알고리즘으로 풀면 안 된다.

